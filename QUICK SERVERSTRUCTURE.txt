CREATE DATABASE STRUCTURE;
USE STRUCTURE;

# CREATE  USERS TABLE 
 CREATE TABLE USERS(
 USER_ID INT PRIMARY KEY ,
 NAME VARCHAR(50),
 MOBILE VARCHAR(20),
 EMAIL VARCHAR(255) unique ,
 PASSWORD VARCHAR(20) ,
 ROLE ENUM ('Admin', 'Service Provider', 'Customer') NOT NULL,
 created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP );
 
 #CRAETE BUSINESSES TABLE 
 CREATE TABLE BUSINESSES(
 BUSINESSES_ID INT PRIMARY KEY,
 USER_ID INT ,
 BUSINESS_NAME VARCHAR(255) NOT NULL,
 ADDRESS VARCHAR(50),
 CONTACT_INFO INT,
 LOGO_URL VARCHAR(2083),
 created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP );
 
 # CREATE CATEGORIES TABLE 
 CREATE TABLE CATEGORIES (
category_id INT PRIMARY KEY,
CATEGORY_NAME VARCHAR(50),
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP );
 
 #CREATE SUBCATEGORIES TABLE 
 CREATE TABLE SUBCATEGORIES(
 SUBCATEGORY_ID INT PRIMARY KEY ,
 CATEGORY_ID INT,
 SUBCATEGORY_NAME VARCHAR(50),
 CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP );

# CREATE SERVICE TABLE WITH FK
CREATE TABLE SERVICES(
SERVICE_ID INT PRIMARY KEY,
BUSINESS_ID INT,
SUBCATEGORY_ID INT,
SERVICE_NAME VARCHAR(50),
DESCRIPTION TEXT,
PRICE INT,
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

#CREATE TABLE APPOINTMENTS 
CREATE TABLE Appointments (
    APPOINTMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    SERVICE_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    APPOINTMENT_DATE DATE NOT NULL,
    TIME_SLOT VARCHAR(20) NOT NULL,
    STATUS ENUM('Booked', 'Cancelled', 'Completed') NOT NULL DEFAULT 'BOOKED',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

#CREATE TABLE PAYMENTS
CREATE TABLE PAYMENTS (
PAYMENT_ID INT NOT NULL,
APPOINTMENT_ID INT NOT NULL,
AMOUNT INT,
PAYMENT_METHOD VARCHAR(20),
STATUS ENUM('PAID','FAILED','REFUNDED'),
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

 #CREATE TABLE REVIEWS
 CREATE TABLE REVIEWS(
 REVIWE_ID INT PRIMARY KEY,
 SERVICE_ID INT ,
 USER_ID INT,
 RATEING  INT NOT NULL,
 COMMENT TEXT,
 CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
 
 #CREATE TABLE NOTIFICATION 
 CREATE TABLE NOTIFICATION(
 NOTIFICATION_ID INT PRIMARY KEY,
 USER_ID INT ,
 MESSAGE TEXT,
 IS_READ BOOLEAN ,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
  
  
  #FK IN BUSSINESS TABLE 
ALTER TABLE BUSINESSES
ADD CONSTRAINT fk_BUSSINES
FOREIGN KEY (user_id)
REFERENCES Users(user_id);

#FK IN SUBCATEGORY TABLE 
ALTER TABLE SUBCATEGORIES
ADD CONSTRAINT fk_SUBCATE
FOREIGN KEY (CATEGORY_ID)
REFERENCES CATEGORIES(CATEGORY_ID);

#FK IN SERVICE TABLE
ALTER TABLE SERVICES
ADD CONSTRAINT fk_SERVICE
FOREIGN KEY (BUSINESS_ID)
REFERENCES BUSINESSES(BUSINESSES_ID);

#FK IN SERVICE TABLE
ALTER TABLE SERVICES
ADD CONSTRAINT fk_SUBCATEGORYS
FOREIGN KEY (SUBCATEGORY_ID )
REFERENCES SUBCATEGORIES(SUBCATEGORY_ID);

#FK IN APPOINTMENT TABLE 
ALTER TABLE APPOINTMENTS
ADD CONSTRAINT fk_APPOINTS
FOREIGN KEY (SERVICE_ID)
REFERENCES SERVICES(SERVICE_ID);

#FK IN APPOINTMENTS TABLE 
ALTER TABLE APPOINTMENTS
ADD CONSTRAINT fk_APPOIN
FOREIGN KEY (USER_ID )
REFERENCES USERS(USER_ID);

# FK IN PAYMENTS TABLE 
ALTER TABLE PAYMENTS 
ADD CONSTRAINT fk_PAY
FOREIGN KEY (APPOINTMENT_ID )
REFERENCES APPOINTMENTS(APPOINTMENT_ID);

# FK IN REVIEW TABLE 
ALTER TABLE REVIEWS
ADD CONSTRAINT fk_REVI
FOREIGN KEY (SERVICE_ID )
REFERENCES SERVICES(SERVICE_ID);

#FK IN REVIEW TABLE
ALTER TABLE REVIEWS
ADD CONSTRAINT fk_REVIW
FOREIGN KEY (USER_ID )
REFERENCES USERS(USER_ID);

#FK IN NOTIFICATION TABLE 
ALTER TABLE NOTIFICATION
ADD CONSTRAINT fk_NOTIFIY
FOREIGN KEY (USER_ID )
REFERENCES USERS(USER_ID);

INSERT INTO USERS (USER_ID, NAME, MOBILE, EMAIL, PASSWORD, ROLE) VALUES
(1, 'Alice Johnson', '9876543210', 'alice.johnson@example.com', 'password123', 'Admin'),
(2, 'Bob Smith', '9123456780', 'bob.smith@example.com', 'securepass', 'Service Provider'),
(3, 'Cathy Lee', '9891234567', 'cathy.lee@example.com', 'mypassword', 'Customer'),
(4, 'David Clark', '9878901234', 'david.clark@example.com', 'pass1234', 'Service Provider'),
(5, 'Emma Watson', '9887654321', 'emma.watson@example.com', 'watson321', 'Customer');

ALTER TABLE BUSINESSES
MODIFY COLUMN CONTACT_INFO BIGINT;


INSERT INTO BUSINESSES (BUSINESSES_ID, USER_ID, BUSINESS_NAME, ADDRESS, CONTACT_INFO, LOGO_URL) VALUES
(1, 2, 'Bob\'s Plumbing Services', '123 Main St', 9876543210, 'https://example.com/logo1.png'),
(2, 2, 'FixIt Electricals', '456 Elm St', 1234567890, 'https://example.com/logo2.png');

INSERT INTO CATEGORIES (CATEGORY_ID, CATEGORY_NAME) VALUES
(1, 'Home Services'),
(2, 'Automotive'),
(3, 'Health & Wellness');

INSERT INTO SUBCATEGORIES (SUBCATEGORY_ID, CATEGORY_ID, SUBCATEGORY_NAME) VALUES
(1, 1, 'Plumbing'),
(2, 1, 'Electrical'),
(3, 3, 'Massage Therapy');

INSERT INTO SERVICES (SERVICE_ID, BUSINESS_ID, SUBCATEGORY_ID, SERVICE_NAME, DESCRIPTION, PRICE) VALUES
(1, 1, 1, 'Leak Repair', 'Fixing water leaks in pipes', 100),
(2, 2, 2, 'Wiring Installation', 'Installing new electrical wiring', 200),
(3, 2, 3, 'Relaxing Massage', 'One-hour relaxing massage session', 150);

INSERT INTO APPOINTMENTS (APPOINTMENT_ID, SERVICE_ID, USER_ID, APPOINTMENT_DATE, TIME_SLOT, STATUS) VALUES
(1, 1, 1, '2025-02-01', '10:00 AM', 'Booked'),
(2, 2, 1, '2025-02-02', '2:00 PM', 'Cancelled'),
(3, 3, 1, '2025-02-03', '5:00 PM', 'Completed');

INSERT INTO PAYMENTS (PAYMENT_ID, APPOINTMENT_ID, AMOUNT, PAYMENT_METHOD, STATUS) VALUES
(1, 1, 100, 'Credit Card', 'PAID'),
(2, 2, 200, 'PayPal', 'FAILED'),
(3, 3, 150, 'Credit Card', 'PAID');

INSERT INTO REVIEWS (REVIWE_ID, SERVICE_ID, USER_ID, RATEING, COMMENT) VALUES
(1, 1, 1, 5, 'Great service! Highly recommended.'),
(2, 2, 1, 4, 'Good service but a bit expensive.'),
(3, 3, 1, 5, 'Amazing experience!');

INSERT INTO NOTIFICATION (NOTIFICATION_ID, USER_ID, MESSAGE, IS_READ) VALUES
(1, 1, 'Your appointment for Leak Repair has been booked.', FALSE),
(2, 1, 'Your payment for Wiring Installation failed.', TRUE),
(3, 1, 'Your review for Relaxing Massage has been submitted.', FALSE);